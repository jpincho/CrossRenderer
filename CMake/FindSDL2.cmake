include ( "Helpers" )
FindModuleStart( SDL2 )
list ( APPEND SDL2_INCLUDE_SEARCH_PATH_SUFFIXES "include/SDL2" )

#message ( STATUS "Searching for SDL2 header in ${SDL2_INCLUDE_SEARCH_PATHS} with suffixes ${SDL2_INCLUDE_SEARCH_PATH_SUFFIXES}")
#message ( STATUS "Searching for SDL2 library in ${SDL2_LIBRARY_SEARCH_PATHS} with suffixes ${SDL2_LIBRARY_SEARCH_PATHS_SUFFIXES}")
find_path ( SDL2_INCLUDE_DIR
    NAMES
        SDL.h
    PATH_SUFFIXES
        ${SDL2_INCLUDE_SEARCH_PATH_SUFFIXES}
    PATHS
        ${SDL2_INCLUDE_SEARCH_PATHS}
    ${SDL2_SEARCH_OPTIONS}
    )

find_library ( SDL2_LIBRARY
    NAMES
        SDL2
        ${SDL2_LIBRARY_NAMES}
    PATH_SUFFIXES
        ${SDL2_LIBRARY_SEARCH_PATH_SUFFIXES}
    PATHS
        ${SDL2_LIBRARY_SEARCH_PATHS}
    ${SDL2_SEARCH_OPTIONS}
    )

get_filename_component ( SDL2_LIBRARY_DIR ${SDL2_LIBRARY} DIRECTORY )

if ( SDL2_INCLUDE_DIR AND EXISTS "${SDL2_INCLUDE_DIR}/SDL2_version.h" )
    file ( STRINGS "${SDL2_INCLUDE_DIR}/SDL2_version.h" SDL2_VERSION_MAJOR_LINE REGEX "^#define[ \t]+SDL2_MAJOR_VERSION[ \t]+[0-9]+$" )
    file ( STRINGS "${SDL2_INCLUDE_DIR}/SDL2_version.h" SDL2_VERSION_MINOR_LINE REGEX "^#define[ \t]+SDL2_MINOR_VERSION[ \t]+[0-9]+$" )
    file ( STRINGS "${SDL2_INCLUDE_DIR}/SDL2_version.h" SDL2_VERSION_PATCH_LINE REGEX "^#define[ \t]+SDL2_PATCHLEVEL[ \t]+[0-9]+$" )
    string ( REGEX REPLACE "^#define[ \t]+SDL2_MAJOR_VERSION[ \t]+ ( [0-9]+ ) $" "\\1" SDL2_VERSION_MAJOR "${SDL2_VERSION_MAJOR_LINE}" )
    string ( REGEX REPLACE "^#define[ \t]+SDL2_MINOR_VERSION[ \t]+ ( [0-9]+ ) $" "\\1" SDL2_VERSION_MINOR "${SDL2_VERSION_MINOR_LINE}" )
    string ( REGEX REPLACE "^#define[ \t]+SDL2_PATCHLEVEL[ \t]+ ( [0-9]+ ) $" "\\1" SDL2_VERSION_PATCH "${SDL2_VERSION_PATCH_LINE}" )
    set ( SDL2_VERSION_STRING ${SDL2_VERSION_MAJOR}.${SDL2_VERSION_MINOR}.${SDL2_VERSION_PATCH} )
    unset ( SDL2_VERSION_MAJOR_LINE )
    unset ( SDL2_VERSION_MINOR_LINE )
    unset ( SDL2_VERSION_PATCH_LINE )
    unset ( SDL2_VERSION_MAJOR )
    unset ( SDL2_VERSION_MINOR )
    unset ( SDL2_VERSION_PATCH )
endif()
#message ( STATUS "SDL2_INCLUDE_DIR - ${SDL2_INCLUDE_DIR}")
#message ( STATUS "SDL2_LIBRARY - ${SDL2_LIBRARY}")
#message ( STATUS "SDL2_LIBRARY_DIR - ${SDL2_LIBRARY_DIR}")

# Fill remaining variables
set ( SDL2_LIBRARIES ${SDL2_LIBRARY} )
set ( SDL2_INCLUDE_DIRS ${SDL2_INCLUDE_DIR} )
if ( (SDL2_LIBRARY) AND (SDL2_INCLUDE_DIR) )
    foreach ( SDL2_COMPONENT ${SDL2_FIND_COMPONENTS} )
        string ( TOUPPER ${SDL2_COMPONENT} SDL2_COMPONENT_UPPERCASE )
        set ( SDL2_${SDL2_COMPONENT}_FOUND FALSE )

        find_path ( SDL2${SDL2_COMPONENT_UPPERCASE}_INCLUDE_DIR
            NAMES
                "SDL_${SDL2_COMPONENT}.h"
            PATH_SUFFIXES
            PATHS
                ${SDL2_INCLUDE_DIR}
            NO_DEFAULT_PATH
            )

        find_library ( SDL2${SDL2_COMPONENT_UPPERCASE}_LIBRARY
            NAMES
                "SDL2_${SDL2_COMPONENT}"
            PATH_SUFFIXES
            PATHS
                ${SDL2_LIBRARY_DIR}
            NO_DEFAULT_PATH
            )

        if ( SDL2${SDL2_COMPONENT_UPPERCASE}_INCLUDE_DIR AND SDL2${SDL2_COMPONENT_UPPERCASE}_LIBRARY )
            message ( STATUS "SDL component ${SDL2_COMPONENT} found" )
            set ( SDL2_${SDL2_COMPONENT}_FOUND TRUE )

            set ( SDL2${SDL2_COMPONENT_UPPERCASE}_LIBRARIES ${SDL2${SDL2_COMPONENT_UPPERCASE}_LIBRARY} )
            set ( SDL2${SDL2_COMPONENT_UPPERCASE}_INCLUDE_DIRS ${SDL2${SDL2_COMPONENT_UPPERCASE}_INCLUDE_DIR} )

            list ( APPEND SDL2_LIBRARIES ${SDL2${SDL2_COMPONENT_UPPERCASE}_LIBRARIES} )
            list ( APPEND SDL2_INCLUDE_DIRS ${SDL2${SDL2_COMPONENT_UPPERCASE}_INCLUDE_DIRS} )
        endif ()
    endforeach()
endif()
unset ( SDL2_COMPONENT )
unset ( SDL2_COMPONENT_UPPERCASE )
unset ( SDL2_INCLUDE_SEARCH_PATHS )
unset ( SDL2_INCLUDE_SEARCH_PATH_SUFFIXES )
unset ( SDL2_LIBRARY_SEARCH_PATHS )
unset ( SDL2_LIBRARY_SEARCH_PATH_SUFFIXES )
unset ( SDL2_SEARCH_OPTIONS )
list ( REMOVE_DUPLICATES SDL2_LIBRARIES )
list ( REMOVE_DUPLICATES SDL2_INCLUDE_DIRS )

#message ( STATUS "SDL2_ROOT - ${SDL2_ROOT}")
#message ( STATUS "SDL2_LIBRARY - ${SDL2_LIBRARY}")
#message ( STATUS "SDL2_INCLUDE_DIR - ${SDL2_INCLUDE_DIR}")
#message ( STATUS "SDL2_LIBRARIES - ${SDL2_LIBRARIES}")
include ( "FindPackageHandleStandardArgs" )
find_package_handle_standard_args ( SDL2
    REQUIRED_VARS
        SDL2_LIBRARIES
        SDL2_INCLUDE_DIR
    VERSION_VAR
        SDL2_VERSION_STRING
    HANDLE_COMPONENTS
    )
